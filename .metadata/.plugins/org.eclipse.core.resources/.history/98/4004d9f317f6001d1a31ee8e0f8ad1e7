package entities;


import static utilz.Constants.Directions.*;
import static utilz.Constants.PlayerConstant.*;

import application.GameCanva;
import application.GameLoop;
import javafx.scene.image.Image;
import javafx.scene.paint.Color;

public class Player extends Entity{
	GameLoop loop = new GameLoop(this);
	public Image[] playerAnimation = new Image[9];
	public Image[] playerAnimation2 = new Image[9];

	GameCanva canva;
	int playerAction = IDLE;
	int playerSpeed = 10;
	public boolean up, down, left, right;
	boolean playerMoving = false;
	public boolean attacking = false;
	public boolean animationLock = false;
	public Player(double x, double y, int width, int height, GameCanva canva) {
		super(x,y,width,height);
		this.canva = canva;
		importImage();
		draw();
		loop.start();
	}
	
	

	
	public void setMoving(boolean moving) {
		playerMoving = moving;
	}

	public void importImage() {
		playerAnimation[0] = new Image(getClass().getResourceAsStream("/__Run.gif"));
		playerAnimation[1] = new Image(getClass().getResourceAsStream("/__Idle.gif"));
		playerAnimation[2] = new Image(getClass().getResourceAsStream("/__Jump.gif"));
		playerAnimation[3] = new Image(getClass().getResourceAsStream("/__Idle.gif"));
		playerAnimation[6] = new Image(getClass().getResourceAsStream("/__AttackCombo2hit.gif"));
	}
	
	/*public void changeXDelta(double value) {
		x += value;
		//rect.setX(rect.getX()+value);
	}*/
	/*public void changeYDelta(double value) {
		y += value;
		//rect.setY(rect.getY()+value);
	}*/
	public void setPosition(double x, double y) {
		x = -250+x;
		y = -250+y;
	}
	public void setAnimation() {
		if(playerMoving) {
			playerAction = RUNNING;
			System.out.println("run");

		}else {
			playerAction = IDLE;
		}
		
		if(attacking) {
			playerAction = ATTACK_1;
			System.out.println("attack");
		}
	}
	public void draw() {
		canva.gc.drawImage(playerAnimation[playerAction],250+x, 250+y, 240,160);
		canva.gc.setFill(Color.BLUE);
		drawHitbox(canva.gc);
	}
	public void reFresh() {
		canva.gc.clearRect(0, 0, canva.canva.getWidth(), canva.canva.getHeight());
		updatePosition();
		if(!animationLock) {
			setAnimation();
		}
		updateHitbox();
		draw();
	}
	public void updatePosition() {
		playerMoving = false;
		if(up && !down) {
			y -= playerSpeed;
			playerMoving = true;
		}else if(!up && down) {
			y += playerSpeed;
			playerMoving = true;
		}
		if(left && !right) {
			x -= playerSpeed;
			playerMoving = true;
		}else if(right && !left) {
			x += playerSpeed;
			playerMoving = true;
		}
	}




	public void resetDirectionBooleans() {
		// TODO Auto-generated method stub
		up = false;
		down = false;
		left = false;
		right = false;
	}
}
